<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="My test Suite" duration-ms="490638" started-at="2019-09-18T11:53:13Z" finished-at="2019-09-18T12:01:24Z">
    <groups>
    </groups>
    <test name="FirefoxTest" duration-ms="261564" started-at="2019-09-18T11:53:13Z" finished-at="2019-09-18T11:57:35Z">
      <class name="com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="beforeSuite" is-config="true" duration-ms="15174" started-at="2019-09-18T11:53:13Z" finished-at="2019-09-18T11:53:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1507bc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="completeFormTest(java.util.List, java.util.Map)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="completeFormTest" duration-ms="26983" started-at="2019-09-18T11:53:28Z" data-provider="searchFlightsData" finished-at="2019-09-18T11:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeFormTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="afterSuite" is-config="true" duration-ms="3205" started-at="2019-09-18T11:53:55Z" finished-at="2019-09-18T11:53:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="beforeSuite" is-config="true" duration-ms="15125" started-at="2019-09-18T11:53:59Z" finished-at="2019-09-18T11:54:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1507bc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="selectFlightsTest(java.util.List, java.util.Map, int, int)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="selectFlightsTest" duration-ms="65334" started-at="2019-09-18T11:54:14Z" data-provider="choseFlightsData" finished-at="2019-09-18T11:55:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element ([[FirefoxDriver: firefox on WINDOWS (aa5ce36a-3b45-444f-bca6-6853b9e9999f)] -> css selector: div[class="grid-container standard-padding "]]) to become stale (tried for 50 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CO-IT002705', ip: '10.130.18.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 69.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190827005903, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 11972, moz:profile: C:\Users\andrea.bertieri\Ap..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: aa5ce36a-3b45-444f-bca6-6853b9e9999f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element ([[FirefoxDriver: firefox on WINDOWS (aa5ce36a-3b45-444f-bca6-6853b9e9999f)] -> css selector: div[class="grid-container standard-padding "]]) to become stale (tried for 50 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CO-IT002705', ip: '10.130.18.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 69.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190827005903, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 11972, moz:profile: C:\Users\andrea.bertieri\Ap..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: aa5ce36a-3b45-444f-bca6-6853b9e9999f
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.globant.testing.exercise1.pages.ResultFlightsPage.selectDepartureFlight(ResultFlightsPage.java:199)
at com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest.selectFlightsTest(buyTicketsBasicFlowTest.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFlightsTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="afterSuite" is-config="true" duration-ms="1804" started-at="2019-09-18T11:55:19Z" finished-at="2019-09-18T11:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="beforeSuite" is-config="true" duration-ms="5337" started-at="2019-09-18T11:55:21Z" finished-at="2019-09-18T11:55:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1507bc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="sortingFlightsResultTest(java.util.List, java.util.Map)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="sortingFlightsResultTest" duration-ms="24813" started-at="2019-09-18T11:55:26Z" data-provider="searchFlightsData" finished-at="2019-09-18T11:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortingFlightsResultTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="afterSuite" is-config="true" duration-ms="4135" started-at="2019-09-18T11:55:51Z" finished-at="2019-09-18T11:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="beforeSuite" is-config="true" duration-ms="15878" started-at="2019-09-18T11:55:55Z" finished-at="2019-09-18T11:56:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1507bc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="whoIsTravelingTest(java.util.List, java.util.Map, int, int)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="whoIsTravelingTest" duration-ms="80925" started-at="2019-09-18T11:56:11Z" data-provider="choseFlightsData" finished-at="2019-09-18T11:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoIsTravelingTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@4909b8da]" name="afterSuite" is-config="true" duration-ms="2811" started-at="2019-09-18T11:57:32Z" finished-at="2019-09-18T11:57:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest -->
    </test> <!-- FirefoxTest -->
    <test name="ChromeTest" duration-ms="229052" started-at="2019-09-18T11:57:35Z" finished-at="2019-09-18T12:01:24Z">
      <class name="com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="beforeSuite" is-config="true" duration-ms="18574" started-at="2019-09-18T11:57:35Z" finished-at="2019-09-18T11:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@4c3c1963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="completeFormTest(java.util.List, java.util.Map)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="completeFormTest" duration-ms="17745" started-at="2019-09-18T11:57:53Z" data-provider="searchFlightsData" finished-at="2019-09-18T11:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completeFormTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="afterSuite" is-config="true" duration-ms="775" started-at="2019-09-18T11:58:11Z" finished-at="2019-09-18T11:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="beforeSuite" is-config="true" duration-ms="10208" started-at="2019-09-18T11:58:12Z" finished-at="2019-09-18T11:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@4c3c1963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="selectFlightsTest(java.util.List, java.util.Map, int, int)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="selectFlightsTest" duration-ms="65947" started-at="2019-09-18T11:58:22Z" data-provider="choseFlightsData" finished-at="2019-09-18T11:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFlightsTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="afterSuite" is-config="true" duration-ms="864" started-at="2019-09-18T11:59:28Z" finished-at="2019-09-18T11:59:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="beforeSuite" is-config="true" duration-ms="13038" started-at="2019-09-18T11:59:29Z" finished-at="2019-09-18T11:59:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@4c3c1963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="sortingFlightsResultTest(java.util.List, java.util.Map)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="sortingFlightsResultTest" duration-ms="15431" started-at="2019-09-18T11:59:42Z" data-provider="searchFlightsData" finished-at="2019-09-18T11:59:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortingFlightsResultTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="afterSuite" is-config="true" duration-ms="750" started-at="2019-09-18T11:59:57Z" finished-at="2019-09-18T11:59:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="beforeSuite(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="beforeSuite" is-config="true" duration-ms="10163" started-at="2019-09-18T11:59:58Z" finished-at="2019-09-18T12:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@4c3c1963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="whoIsTravelingTest(java.util.List, java.util.Map, int, int)[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="whoIsTravelingTest" duration-ms="74455" started-at="2019-09-18T12:00:08Z" data-provider="choseFlightsData" finished-at="2019-09-18T12:01:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Price (Lowest), Price (Highest), Duration (Shortest), Duration (Longest), Departure (Earliest), Departure (Latest), Arrival (Earliest), Arrival (Latest)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{adults=1, arriveDate=2020-05-03, from=LAS, to=LAX, departureDate=2020-01-03}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoIsTravelingTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest@337d0578]" name="afterSuite" is-config="true" duration-ms="1099" started-at="2019-09-18T12:01:23Z" finished-at="2019-09-18T12:01:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.globant.testing.exercise1.tests.buyTicketsBasicFlowTest -->
    </test> <!-- ChromeTest -->
  </suite> <!-- My test Suite -->
</testng-results>
